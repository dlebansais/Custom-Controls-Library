# version format
version: v{build}

branches:
  only:
    - master
    - deployment

# Skipping commits with particular message or from specific user
skip_commits:
  message: "*[skip ci]*"

image: Visual Studio 2022

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

environment:
  NuGetPackageSourceCredentials_github:     # value: Username=dlebansais;Password={github package token}
    secure: Fd8cbeFRzxym3D4FpbJo2m943iBsBRgrAGOEFhMHDO90WMUkfdJECxPcHpWmkxregb17bhgiIhvFJB9ac4dx3cr3ZpsxpqTzIc61BaUiv90=
  opencover_version: 4.7.1221
  codecov_uploader_version: 0.7.1
  report_generator_version: 5.2.0

matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

before_build:
  - nuget restore %APPVEYOR_PROJECT_NAME%.sln
  - nuget install GitCommitId -DependencyVersion Highest -OutputDirectory packages

configuration:
  - Release
  - Debug

build:
  project: $(APPVEYOR_PROJECT_NAME).sln

after_build:
  - nuget install Packager -DependencyVersion Highest -OutputDirectory packages # Install Packager
  - ps: $folder = Get-ChildItem -Path packages/Packager.* -Name | Out-String    # Get the installation folder (we don't know the actual version)
  - ps: $firstline = ($folder -split '\r\n')[0]                                 # Get rid of carriage-return
  - ps: $fullpath = ".\packages\$firstline\lib\net481\Packager.exe"             # Build full path
  - ps: $env:PACKAGER_PATH=$fullpath
  - '%PACKAGER_PATH% %CUSTOM_PACKAGER_OPTIONS%'                                 # Execute the packager: the output is nuget\%APPVEYOR_PROJECT_NAME%.nuspec
  - if exist nuget\%APPVEYOR_PROJECT_NAME%.nuspec nuget pack nuget\%APPVEYOR_PROJECT_NAME%.nuspec
  - '%PACKAGER_PATH% %CUSTOM_PACKAGER_OPTIONS% --debug'                         # Execute the packager: the output is nuget-debug\%APPVEYOR_PROJECT_NAME%-Debug.nuspec
  - if exist nuget-debug\%APPVEYOR_PROJECT_NAME%-Debug.nuspec nuget pack nuget-debug\%APPVEYOR_PROJECT_NAME%-Debug.nuspec
  - ps: |-
        $xml = [xml](Get-Content .\BusyIndicator\BusyIndicator.csproj)
  - ps: $version=$xml.Project.PropertyGroup.Version
  - ps: set version_tag v$version
  - ps: $version_tag=$version_tag.Trim()
  - ps: $env:VERSION_TAG=$version_tag
  - echo Version is "%VERSION_TAG%"

before_test:
  - nuget install OpenCover -Version %opencover_version% -OutputDirectory packages
  - nuget install CodecovUploader -Version %codecov_uploader_version% -OutputDirectory packages
  - ps: $env:COVERAGE_RESULT_FILE="Coverage-$env:APPVEYOR_PROJECT_NAME.xml"
  - |-
    printf "dotnet test ./Test/DialogValidation.Test/bin/x64/%CONFIGURATION%/net8.0-windows/DialogValidation.Test.dll -l console;verbosity=detailed --environment RESULTFILENAME=""../../../../../../Coverage-%APPVEYOR_PROJECT_NAME%.xml""\n" > run_tests.bat
    printf "dotnet test ./Test/EditableTextBlock.Test/bin/x64/%CONFIGURATION%/net8.0-windows/EditableTextBlock.Test.dll -l console;verbosity=detailed --environment RESULTFILENAME=""../../../../../../Coverage-%APPVEYOR_PROJECT_NAME%.xml""\n" >> run_tests.bat
    printf "dotnet test ./Test/EnumComboBox.Test/bin/x64/%CONFIGURATION%/net8.0-windows/EnumComboBox.Test.dll -l console;verbosity=detailed --environment RESULTFILENAME=""../../../../../../Coverage-%APPVEYOR_PROJECT_NAME%.xml""\n" >> run_tests.bat
    printf "dotnet test ./Test/EnumRadioButton.Test/bin/x64/%CONFIGURATION%/net8.0-windows/EnumRadioButton.Test.dll -l console;verbosity=detailed --environment RESULTFILENAME=""../../../../../../Coverage-%APPVEYOR_PROJECT_NAME%.xml""\n" >> run_tests.bat
    printf "dotnet test ./Test/ExtendedCommandControls.Test/bin/x64/%CONFIGURATION%/net8.0-windows/ExtendedCommandControls.Test.dll -l console;verbosity=detailed --environment RESULTFILENAME=""../../../../../../Coverage-%APPVEYOR_PROJECT_NAME%.xml""\n" >> run_tests.bat
  - |-
    printf "@echo ************************************************************** Starting Tests..\n" > run_tests1.bat
    printf "call run_tests.bat\n" >> run_tests1.bat
  - |-
    printf ".\packages\OpenCover.%opencover_version%\Tools\OpenCover.Console.exe -register:user -returntargetcode -target:\x25\x31 -mergeoutput -output:""Coverage-%APPVEYOR_PROJECT_NAME%"".xml\n" > opencover.bat

test_script:
  - if '%APPVEYOR_REPO_BRANCH%' == 'master' run_tests1.bat

after_test:
  - ps: Get-Content $env:COVERAGE_RESULT_FILE -Head 3
  - if '%APPVEYOR_REPO_BRANCH%' == 'master' .\packages\CodecovUploader.%codecov_uploader_version%\Tools\codecov.exe -f %COVERAGE_RESULT_FILE%

artifacts:
  - path: $(APPVEYOR_PROJECT_NAME)-Debug.*.nupkg
    name: $(APPVEYOR_PROJECT_NAME)-Package-Debug
  - path: $(APPVEYOR_PROJECT_NAME).*.nupkg
    name: $(APPVEYOR_PROJECT_NAME)-Package-Release
  - path: ../info.txt
    name: info

deploy:
  - provider: GitHub
    release: $(VERSION_TAG)
    description: 'Automatic deployment'
    auth_token:
      secure: 8IyH+0A5FwE96xWDzhXQH5zxg49+0MhTd25bUTMcc6qePhZcVmaVd6i0bsM2tT1Q
    artifact: $(APPVEYOR_PROJECT_NAME)-Package-Release
    draft: false
    prerelease: false
    on:
      branch: deployment
      configuration: Release
  - provider: GitHub
    release: $(VERSION_TAG)
    description: 'Automatic deployment'
    auth_token:
      secure: 8IyH+0A5FwE96xWDzhXQH5zxg49+0MhTd25bUTMcc6qePhZcVmaVd6i0bsM2tT1Q
    artifact: $(APPVEYOR_PROJECT_NAME)-Package-Debug
    draft: false
    prerelease: false
    on:
      branch: deployment
      configuration: Debug
  - provider: NuGet
    server: https://nuget.pkg.github.com/dlebansais/index.json
    symbol_server: https://nuget.pkg.github.com/dlebansais/index.json
    artifact: $(APPVEYOR_PROJECT_NAME)-Package-Debug
    username: dlebansais
    api_key:
      secure: P1otXPxREK8T2L9vw4vpvvpXYlMyCTGa/iQIfuXtr4mjOFZBYR83Aie3hTZotfOu
    on:
      branch: deployment
      configuration: Debug
  - provider: NuGet
    server: https://nuget.pkg.github.com/dlebansais/index.json
    artifact: $(APPVEYOR_PROJECT_NAME)-Package-Release
    skip_symbols: true
    username: dlebansais
    api_key:
      secure: P1otXPxREK8T2L9vw4vpvvpXYlMyCTGa/iQIfuXtr4mjOFZBYR83Aie3hTZotfOu
    on:
      branch: deployment
      configuration: Release
