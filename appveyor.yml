# version format
version: v{build}

branches:
  only:
    - master
    - deployment

# Skipping commits with particular message or from specific user
skip_commits:
  message: "*[skip ci]*"

image: Visual Studio 2019

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

before_build:
  - nuget restore %APPVEYOR_PROJECT_NAME%.sln
  - |-
    printf "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" > build_all.xml
    printf "  <Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n" >> build_all.xml
    printf "    <Target Name=\"Build\">\n" >> build_all.xml
    printf "      <MSBuild Projects=\"%APPVEYOR_PROJECT_NAME%.sln\" Properties=\"Configuration=Debug;Platform=x64\"/>\n" >> build_all.xml
    printf "      <MSBuild Projects=\"%APPVEYOR_PROJECT_NAME%.sln\" Properties=\"Configuration=Release;Platform=x64\"/>\n" >> build_all.xml
    printf "    </Target>\n" >> build_all.xml
    printf "</Project>\n" >> build_all.xml

build:
  project: build_all.xml

after_build:
  - nuget install Packager -DependencyVersion Highest -OutputDirectory packages # Install Packager
  - ps: $folder = Get-ChildItem -Path packages/Packager.* -Name | Out-String    # Get the installation folder (we don't know the actual version)
  - ps: $firstline = ($folder -split '\r\n')[0]                                 # Get rid of carriage-return
  - ps: $fullpath = ".\packages\$firstline\lib\net48\Packager.exe"              # Build full path
  - ps: '& $fullpath --debug'                                                   # Execute the packager: the output is nuget-debug\%APPVEYOR_PROJECT_NAME%-Debug.nuspec
  - nuget pack nuget-debug\%APPVEYOR_PROJECT_NAME%-Debug.nuspec
  - dotnet pack --configuration Release /p:Platform=x64 %APPVEYOR_PROJECT_NAME%/%APPVEYOR_PROJECT_NAME%.csproj
  - ps: |-
        $xml = [xml](Get-Content .\$env:APPVEYOR_PROJECT_NAME\$env:APPVEYOR_PROJECT_NAME.csproj)
  - ps: $version = $xml.Project.PropertyGroup.Version
  - ps: set version_tag v$version
  - ps: $env:VERSION_TAG=$version_tag
  - echo "Version is %VERSION_TAG%"

test: off

artifacts:
  - path: $(APPVEYOR_PROJECT_NAME)/bin/
    name: $(APPVEYOR_PROJECT_NAME)
  - path: $(APPVEYOR_PROJECT_NAME)-Debug.*.nupkg
    name: $(APPVEYOR_PROJECT_NAME)-Package-Debug
    type: NuGetPackage
  - path: $(APPVEYOR_PROJECT_NAME)/bin/x64/Release/$(APPVEYOR_PROJECT_NAME).*.nupkg
    name: $(APPVEYOR_PROJECT_NAME)-Package-Release
    type: NuGetPackage

deploy:
  - provider: GitHub
    release: $(VERSION_TAG)
    description: 'Automatic deployment'
    auth_token:
      secure: dUpQSnUT5/m88z1BqHNnRjaxxZzz09CmyqFJr/cAyWjqKeLgnKunlIZlEKAXlNIm
    artifact: $(APPVEYOR_PROJECT_NAME)
    draft: false
    prerelease: false
    on:
      branch: deployment
  - provider: NuGet
    server: https://nuget.pkg.github.com/dlebansais/index.json
    symbol_server: https://nuget.pkg.github.com/dlebansais/index.json
    artifact: $(APPVEYOR_PROJECT_NAME)-Package-Debug
    username: dlebansais
    api_key:
      secure: GOksqNi8I7Vs6dcsfosJvSa9vMaZH3zLQJjnx+ruJy6ZeLF075mifj4MdRI34E8W
    on:
      branch: deployment
  - provider: NuGet
    server: https://nuget.pkg.github.com/dlebansais/index.json
    artifact: $(APPVEYOR_PROJECT_NAME)-Package-Release
    skip_symbols: true
    username: dlebansais
    api_key:
      secure: GOksqNi8I7Vs6dcsfosJvSa9vMaZH3zLQJjnx+ruJy6ZeLF075mifj4MdRI34E8W
    on:
      branch: deployment
