<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SplitView</name>
    </assembly>
    <members>
        <member name="T:Converters.BooleanToObjectConverter">
            <summary>
            Converter from a boolean or nullable boolean to the first or second objects in a collection.
            </summary>
        </member>
        <member name="M:Converters.BooleanToObjectConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converter from a boolean or nullable boolean to the first or second objects in a collection.
            </summary>
            <param name="value">The bool or bool? value to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">A collection of objects.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            If <paramref name="value"/> is a bool and equal to True, or a bool? and also equal to true, and <paramref name="parameter"/> is a collection with at least two objects, the converter returns the second object in the collection.
            Otherwise, if collection has at least one object, the converter returns the first object in the collection.
            Otherwise, this method returns null.
            </returns>
        </member>
        <member name="M:Converters.BooleanToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method is not used and will always return null.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Converters.DoubleToPercentageConverter">
            <summary>
            Converter from a positive double to the equivalent percentage.
            </summary>
        </member>
        <member name="M:Converters.DoubleToPercentageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converter from a positive double to the equivalent percentage.
            </summary>
            <param name="value">The double value to convert.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            If <paramref name="value"/> is a positive double, or zero, the converter returns <paramref name="value"/> multiplied by 100 and followed by the % sign.
            Otherwise, returns null.
            </returns>
        </member>
        <member name="M:Converters.DoubleToPercentageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method is not used and will always return null.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:CustomControls.SplitView">
            <summary>
            <para>Represents a view of an arbitrary content that can be split horizontally in two views.</para>
            <para>Implemented as a user control with a <see cref="P:CustomControls.SplitView.ViewTemplate"/> template for views.</para>
            </summary>
            <remarks>
            <para>Features:</para>
            <para>. Begins as a single view with a grip on the top right corner to start splitting.</para>
            <para>. Uses a <see cref="T:System.Windows.Controls.GridSplitter"/> to separate the views.</para>
            <para>. Hides one of the views if it becomes too small to be visible.</para>
            </remarks>
            <summary>
            SplitView
            </summary>
        </member>
        <member name="F:CustomControls.SplitView.MaxContent">
            <summary>
            The maximum number of views that can be visible simultaneously. This control only supports two views.
            </summary>
        </member>
        <member name="F:CustomControls.SplitView.ViewTemplateProperty">
            <summary>
            Identifies the <see cref="P:CustomControls.SplitView.ViewTemplate"/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref="P:CustomControls.SplitView.ViewTemplate"/> dependency property.
            </returns>
        </member>
        <member name="P:CustomControls.SplitView.ViewTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display each view.
            </summary>
        </member>
        <member name="F:CustomControls.SplitView.ZoomOptionsProperty">
            <summary>
            Identifies the <see cref="P:CustomControls.SplitView.ZoomOptions"/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref="P:CustomControls.SplitView.ZoomOptions"/> dependency property.
            </returns>
        </member>
        <member name="P:CustomControls.SplitView.ZoomOptions">
            <summary>
            Gets a collection of zooms that can be applied to each view separately.
            </summary>
        </member>
        <member name="F:CustomControls.SplitView.ViewLoadedEvent">
            <summary>
            Identifies the ViewLoaded routed event.
            </summary>
        </member>
        <member name="E:CustomControls.SplitView.ViewLoaded">
            <summary>
            Sent when a view has been loaded.
            </summary>
        </member>
        <member name="M:CustomControls.SplitView.NotifyViewLoaded(System.Windows.FrameworkElement)">
            <summary>
            Sends the <see cref="E:CustomControls.SplitView.ViewLoaded"/> event.
            </summary>
            <param name="viewContent">The control representing the view that has been loaded.</param>
        </member>
        <member name="F:CustomControls.SplitView.ViewUnloadedEvent">
            <summary>
            Identifies the ViewUnloaded routed event.
            </summary>
        </member>
        <member name="E:CustomControls.SplitView.ViewUnloaded">
            <summary>
            Sent when a view has been unloaded.
            </summary>
        </member>
        <member name="M:CustomControls.SplitView.NotifyViewUnloaded(System.Windows.FrameworkElement)">
            <summary>
            Sends the <see cref="E:CustomControls.SplitView.ViewUnloaded"/> event.
            </summary>
            <param name="viewContent">The control representing the view that has been unloaded.</param>
        </member>
        <member name="F:CustomControls.SplitView.TopRowVisibilityChangedEvent">
            <summary>
            Identifies the TopRowVisibilityChanged routed event.
            </summary>
        </member>
        <member name="E:CustomControls.SplitView.TopRowVisibilityChanged">
            <summary>
            Sent when the top row view has becomed visible or collapsed.
            </summary>
        </member>
        <member name="M:CustomControls.SplitView.NotifyTopRowVisibilityChanged">
            <summary>
            Sends the <see cref="E:CustomControls.SplitView.TopRowVisibilityChanged"/> event.
            </summary>
        </member>
        <member name="F:CustomControls.SplitView.ZoomChangedEvent">
            <summary>
            Identifies the ZoomChanged routed event.
            </summary>
        </member>
        <member name="E:CustomControls.SplitView.ZoomChanged">
            <summary>
            Sent when the zoom of one of the views has changed.
            </summary>
        </member>
        <member name="M:CustomControls.SplitView.NotifyZoomChanged(System.Windows.FrameworkElement,System.Double)">
            <summary>
            Sends the <see cref="E:CustomControls.SplitView.ViewUnloaded"/> event.
            </summary>
            <param name="viewContent">The control representing the view to which the new zoom applies.</param>
            <param name="zoom">The new zoom value.</param>
            <remarks>
            A value of <paramref name="zoom"/>=1.0 means no zoom (or 100%).
            </remarks>
        </member>
        <member name="M:CustomControls.SplitView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CustomControls.SplitView"/> class.
            </summary>
        </member>
        <member name="P:CustomControls.SplitView.IsTopRowVisible">
            <summary>
            Gets a value indicating whether the two views are visible.
            </summary>
            <returns>
            True if the two views are visible. False otherwise.
            </returns>
        </member>
        <member name="P:CustomControls.SplitView.IsSplitRemovable">
            <summary>
            Gets a value indicating whether the control can be returned to a single view.
            </summary>
            <returns>
            True if the control can be returned to a single view. False otherwise.
            </returns>
        </member>
        <member name="M:CustomControls.SplitView.IsRowVisible(System.Int32)">
            <summary>
            Gets a value indicating if a view is visible.
            </summary>
            <param name="rowIndex">The zero-based index of the row. The top row is at index 0.</param>
            <returns>
            True if the view at index <paramref name="rowIndex"/> is visible. False otherwise.
            </returns>
        </member>
        <member name="M:CustomControls.SplitView.Split">
            <summary>
            Split the control in two views.
            </summary>
        </member>
        <member name="M:CustomControls.SplitView.RemoveSplit">
            <summary>
            Removes any split and returns the control to a single view state.
            </summary>
        </member>
        <member name="M:CustomControls.SplitView.GetRowContent(System.Int32)">
            <summary>
            Return the control at the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>the control at the specified row.</returns>
        </member>
        <member name="E:CustomControls.SplitView.PropertyChanged">
            <summary>
            Implements the PropertyChanged event.
            </summary>
        </member>
        <member name="M:CustomControls.SplitView.NotifyPropertyChanged(System.String)">
            <summary>
            Invoke handlers of the <see cref="E:CustomControls.SplitView.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="M:CustomControls.SplitView.NotifyThisPropertyChanged(System.String)">
            <summary>
            Invoke handlers of the <see cref="E:CustomControls.SplitView.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="M:CustomControls.SplitView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CustomControls.ViewLoadedEventArgs">
            <summary>
            Contains state information and event data associated with the <see cref="E:CustomControls.SplitView.ViewLoaded"/> event.
            </summary>
        </member>
        <member name="M:CustomControls.ViewLoadedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomControls.ViewLoadedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The event this argument is associated to.</param>
            <param name="viewContent">The control representing the view that has been loaded.</param>
        </member>
        <member name="P:CustomControls.ViewLoadedEventArgs.ViewContent">
            <summary>
            Gets the control representing the view that has been loaded.
            </summary>
            <returns>
            The control representing the view that has been loaded.
            </returns>
        </member>
        <member name="T:CustomControls.ViewUnloadedEventArgs">
            <summary>
            Contains state information and event data associated with the <see cref="E:CustomControls.SplitView.ViewUnloaded"/> event.
            </summary>
        </member>
        <member name="M:CustomControls.ViewUnloadedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomControls.ViewUnloadedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The event this argument is associated to.</param>
            <param name="viewContent">The control representing the view that has been unloaded.</param>
        </member>
        <member name="P:CustomControls.ViewUnloadedEventArgs.ViewContent">
            <summary>
            Gets the control representing the view that has been unloaded.
            </summary>
            <returns>
            The control representing the view that has been unloaded.
            </returns>
        </member>
        <member name="T:CustomControls.ZoomChangedEventArgs">
            <summary>
            Contains state information and event data associated with the <see cref="E:CustomControls.SplitView.ZoomChanged"/> event.
            </summary>
        </member>
        <member name="M:CustomControls.ZoomChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.FrameworkElement,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomControls.ZoomChangedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The event this argument is associated to.</param>
            <param name="viewContent">The control representing the view to which the new zoom applies.</param>
            <param name="zoom">The new zoom value.</param>
            <remarks>
            A value of <paramref name="zoom"/>=1.0 means no zoom (or 100%).
            </remarks>
        </member>
        <member name="P:CustomControls.ZoomChangedEventArgs.ViewContent">
            <summary>
            Gets the control representing the view to which the new zoom applies.
            </summary>
            <returns>
            The control representing the view to which the new zoom applies.
            </returns>
        </member>
        <member name="P:CustomControls.ZoomChangedEventArgs.Zoom">
            <summary>
            Gets the new zoom value.
            </summary>
            <returns>
            The new zoom value.
            </returns>
            <remarks>
            A value of <see cref="P:CustomControls.ZoomChangedEventArgs.Zoom"/>=1.0 means no zoom (or 100%).
            </remarks>
        </member>
    </members>
</doc>
