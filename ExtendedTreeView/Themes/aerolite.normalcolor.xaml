<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:CustomControls">
    <ctrl:TreeViewMarginConverter x:Key="convTreeViewMargin"/>
    <ctrl:TreeViewLevelToObjectConverter x:Key="convTreeViewLevelToObject"/>
    <CompositeCollection x:Key="CollapsedHiddenVisible">
        <Visibility>Collapsed</Visibility>
        <Visibility>Hidden</Visibility>
        <Visibility>Visible</Visibility>
    </CompositeCollection>
    <Style TargetType="{x:Type ToggleButton}" x:Key="DefaultExpandButtonStyle">
        <Style.Resources>
            <Style TargetType="Grid">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
            </Style>
            <Style TargetType="Path">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="StrokeThickness" Value="0.8"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewItemBase}}}" Value="True"/>
                    <Condition Binding="{Binding (Selector.IsSelectionActive), RelativeSource={RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewItemBase}}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Path x:Name="pathButton" Stroke="{x:Static SystemColors.HighlightTextBrush}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="pathButton" Property="Data" Value="M 0,0 L 0,8 L 4,4 L 0,0 Z"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="pathButton" Property="Data" Value="M 0,6 L 6,0 L 6,6 L 0,6 Z"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="pathButton" Property="Fill" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="pathButton" Property="Fill" Value="{x:Static SystemColors.HighlightTextBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="pathButton" Property="Fill" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="pathButton" Property="Fill" Value="{x:Static SystemColors.HighlightTextBrush}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
        </Style.Triggers>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Path x:Name="pathButton"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="pathButton" Property="Data" Value="M 0,0 L 0,8 L 4,4 L 0,0 Z"/>
                            <Setter TargetName="pathButton" Property="Fill" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="pathButton" Property="Data" Value="M 0,6 L 6,0 L 6,6 L 0,6 Z"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="pathButton" Property="Stroke" Value="{x:Static SystemColors.ControlTextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pathButton" Property="Stroke" Value="{x:Static SystemColors.HighlightBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="pathButton" Property="Fill" Value="{x:Static SystemColors.ControlTextBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="pathButton" Property="Fill" Value="{x:Static SystemColors.HighlightBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListBorder" Color="#FFCCCCCC" />
    <Style x:Key="{x:Type ctrl:ExtendedTreeViewBase}" TargetType="{x:Type ctrl:ExtendedTreeViewBase}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:ExtendedTreeViewBase}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Padding="1">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ExpandButtonWidth" Value="16"/>
        <Setter Property="IndentationWidth" Value="16"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Item.Static.Background" Color="#FFFCFCFC" />
    <SolidColorBrush x:Key="Item.Static.Border" Color="#FFFCFCFC" />
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#FFF2F7FD" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#FFB8D6FB" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#FFDCEBFE" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF84ACDD" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#FFF2F2F2" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ctrl:ExtendedTreeViewItemBase}" TargetType="{x:Type ctrl:ExtendedTreeViewItemBase}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:ExtendedTreeViewItemBase}">
                    <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                            <StackPanel.Margin>
                                <MultiBinding Converter="{StaticResource convTreeViewMargin}">
                                    <Binding Path="Level" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewItemBase}}"/>
                                    <Binding Path="IsRootAlwaysExpanded" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewBase}}"/>
                                    <Binding Path="IndentationWidth" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewBase}}"/>
                                    <Binding Path="ExpandButtonWidth" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewBase}}"/>
                                </MultiBinding>
                            </StackPanel.Margin>
                            <Grid>
                                <Grid.Width>
                                    <Binding Path="ExpandButtonWidth" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewBase}}"/>
                                </Grid.Width>
                                <Grid.Visibility>
                                    <MultiBinding Converter="{StaticResource convTreeViewLevelToObject}" ConverterParameter="{StaticResource CollapsedHiddenVisible}">
                                        <Binding Path="Level" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewItemBase}}"/>
                                        <Binding Path="IsRootAlwaysExpanded" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewBase}}"/>
                                        <Binding Path="Children.Count"/>
                                    </MultiBinding>
                                </Grid.Visibility>
                                <ToggleButton Name="Btn">
                                    <ToggleButton.Style>
                                        <Binding Path="ExpandButtonStyle" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewBase}}" TargetNullValue="{StaticResource DefaultExpandButtonStyle}"/>
                                    </ToggleButton.Style>
                                    <ToggleButton.IsChecked>
                                        <Binding Path="IsExpanded" RelativeSource="{RelativeSource AncestorType={x:Type ctrl:ExtendedTreeViewItemBase}}" FallbackValue="False"/>
                                    </ToggleButton.IsChecked>
                                </ToggleButton>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsDropOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="ctrl:ExtendedTreeViewBase.HasContextMenuOpen" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>